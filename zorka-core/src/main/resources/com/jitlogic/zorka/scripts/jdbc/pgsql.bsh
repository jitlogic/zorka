/**
 * Copyright 2012-2020 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

zorka.require("sql.bsh");

__pgsql() {

  _pgargsProcessor() {
    process(rec) {
      pgargs = util.get(rec.get("THIS"), "preparedParameters");
      if (sql._params && pgargs != null) {
        tracer.newAttr("args.count", ""+pgargs.getParameterCount());
        for (int i = 1; i <= pgargs.getParameterCount(); i++) {
          tracer.newAttr("args." + i, pgargs.toString(i, false));
        }
      }
      return rec;
    }
    return (com.jitlogic.zorka.core.spy.SpyProcessor)this;
  }


  spy.add(sql._instrumentStmt("PGSQL_1", "${THIS.connection.creatingURL}")
    .include(
      spy.byMethod(0, "org.postgresql.jdbc.PgStatement", "execute*", null, "String"),
      spy.byMethod(0, "org.postgresql.jdbc2.AbstractJdbc2Statement", "execute*", null, "String"),
      spy.byMethod(0, "org.postgresql.jdbc3.AbstractJdbc3Statement", "execute*", null, "String")));

  spy.add(sql._instrumentPStmt("PGSQL_2", "${THIS.connection.creatingURL}", "${THIS.preparedQuery}")
    .include(
      spy.byMethod(0, "org.postgresql.jdbc2.AbstractJdbc2Statement", "execute*", null, spy.SM_NOARGS),
      spy.byMethod(0, "org.postgresql.jdbc3.AbstractJdbc3Statement", "execute*", null, spy.SM_NOARGS)));

  spy.add(sql._instrumentPStmt("PGSQL_3", "${THIS.connection.creatingURL}", "${THIS.preparedQuery.query}")
    .onSubmit(_pgargsProcessor())
    .include(
      spy.byMethod(0, "org.postgresql.jdbc.PgPreparedStatement", "execute", null, spy.SM_NOARGS)));

  if (zorka.boolCfg("tracer")) {
      tracer.exclude("org.postgresql.**");
  }

  return this;
}


pgsql = __pgsql();

