/**
 * Copyright 2012-2013 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

__jbossejb() {

  if (zorka.boolCfg("ejb"), true) {
    // EJB tracing for JBoss
    _ejb_trace = zorka.boolCfg("ejb.trace");
    _ejb_params = zorka.boolCfg("ejb.params");
    _ejb_stats = zorka.boolCfg("ejb.stats");

    spy.add(spy.instrument()
      .onEnter(
        spy.fetchArg("INV", 1),
        spy.format("METHOD", "${INV.method.name}"),
        spy.format("CLASS", "${INV.method.clazz.name}"),
        _ejb_trace ? tracer.begin("EJB", zorka.longCfg("ejb.trace.time")) : null,
        _ejb_trace ? tracer.attr("METHOD", "METHOD") : null,
        _ejb_trace ? tracer.attr("CLASS", "CLASS") : null)
      .onError(
        _ejb_trace ? tracer.flags(tracer.SUBMIT_TRACE) : null,
        spy.fetchError("ERR"),
        spy.format("MSG", "${ERR.message}"),
        spy.trapperCollector(ejb.error_trapper, zorka.INFO, "EJB", zorka.stringCfg("ejb.error.format")))
      .onReturn(
        _ejb_params ? spy.fetchRetVal("RET") : spy.put("RET", ""))
      .onSubmit(
        _ejb_params ? (com.jitlogic.zorka.core.spy.SpyProcessor)(ejb.arg_processor()) : spy.put("PARAMS", ""),
        _ejb_trace ? tracer.attr("RET", "RET") : null,
        _ejb_stats ? spy.zorkaStats("java", ejb._mbean, "byMethod", "${CLASS}.${METHOD}") : null,
        _ejb_stats ? spy.zorkaStats("java", ejb._mbean, "stats", "ALL") : null,
        spy.longerThan(zorka.longCfg("ejb.slow.time")),
        spy.strTime("TIME"),
        spy.trapperCollector(ejb.slow_trapper, zorka.INFO, "EJB", zorka.stringCfg("ejb.slow.format")))
      .include(spy.byMethod("org.jboss.ejb.Container", "invoke")));

  }

  return this;

}

jbossejb = __jbossejb();
